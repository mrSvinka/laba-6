/*
Вариант 9

1. 	Дана последовательность натуральных чисел {aj}j=1...n (n<=10000). Если в последовательности есть хотя бы одно простое число, упорядочить последовательность по неубыванию.
 
2. 	Ввести последовательность натуральных чисел {Aj}j=1...n (n<=1000). Упорядочить последовательность по неубыванию произведения цифр числа, числа с одинаковыми произведениями цифр дополнительно упорядочить по неубыванию первой цифры числа, числа с одинаковыми произведениями цифр и одинаковыми первыми цифрами дополнительно упорядочить по неубыванию самого числа.
 
3. 	Дана целочисленная матрица {Aij}i=1..n,j=1..m (n,m<=100). Найти строку, в которой меньше всего четных чисел, и заменить все      элементы этой строки их квадратами.

4. Сначала введите последовательность. Затем удалите и продублируйте элементы. Затем выведите полученную последовательность (каждый элемент по одному разу). Используйте в программе только один массив.

Дана последовательность натуральных чисел {Aj}j=1...n (n<=10000). Удалить из последовательности числа, произведение цифр которых равно 180, а среди оставшихся продублировать числа, начинающиеся и заканчивающиеся цифрой 1.

*/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;


bool isPrime(int num) 
{
    if (num < 2) return false;
    for (int i = 2; i * i <= num; i++) 
    {
        if (num % i == 0) return false;
    }
    return true;
}

int main() 
{
    int n;
    cout << "Введите количество чисел: ";
    cin >> n;
    vector<int> numbers(n);

    cout << "Введите числа: ";
    for (int i = 0; i < n; ++i) 
    {
        cin >> numbers[i];
    }

    for (int num : numbers) 
    {
        if (isPrime(num)) 
        {
            sort(numbers.begin(), numbers.end());
            break;
        }
    }

    cout << "Упорядоченная последовательность: ";
    for (int num : numbers) 
    {
        cout << num << " ";
    }
    return 0;
}